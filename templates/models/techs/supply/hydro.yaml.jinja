techs:
  hydro_run_of_river:  # from [@JRC:2014] Table 14
    name: Run of river hydro electricity
    template: interest_rate
    base_tech: supply
    carrier_out: electricity
    source_unit: per_cap
    lifetime: 60
    cost_flow_cap:
      data: {{5620000 * scaling_factors.specific_costs}} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2013/MW") }}
      index: monetary
      dims: costs
    cost_om_annual:
      data: {{5620000 * 0.03 * scaling_factors.specific_costs}} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2013/MW") }} 3% of CAPEX
      index: monetary
      dims: costs
    cost_flow_out:
      data: {{5 * scaling_factors.specific_costs}} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2013/MW") }}
      index: monetary
      dims: costs
  hydro_reservoir:  # from [@JRC:2014] Table 12
    name: Hydro electricity with a reservoir.
    template: interest_rate
    base_tech: supply
    carrier_out: electricity
    source_unit: per_cap
    include_storage: true
    lifetime: 60
    cost_flow_cap:
      data: {{3370000 * scaling_factors.specific_costs}} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2013/MW") }}
      index: monetary
      dims: costs
    cost_om_annual:
      data: {{3370000 * 0.03 * scaling_factors.specific_costs}} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2013/MW") }} 3% of CAPEX
      index: monetary
      dims: costs
    cost_flow_out:
      data: {{5 * scaling_factors.specific_costs}} #  {{ (1 / scaling_factors.specific_costs) | unit("EUR2013/MW") }}
      index: monetary
      dims: costs

data_sources:
  capacityfactors_hydro_run_of_river:
    source: timeseries/supply/capacityfactors-hydro-run-of-river.csv
    rows: timesteps
    columns: nodes
    add_dims:
      techs: hydro_run_of_river
      parameters: source_use_max
  capacityfactors_hydro_reservoir:
    source: timeseries/supply/capacityfactors-hydro-reservoir.csv
    rows: timesteps
    columns: nodes
    add_dims:
      techs: hydro_reservoir
      parameters: source_use_max

overrides:
  no_hydro_supply_fixed_cost:
    # Only assign costs to O&M and variable costs
    techs.hydro_run_of_river:
      cost_flow_cap.data: 0
    techs.hydro_reservoir:
      cost_flow_cap.data: 0

  schroeder_hydro_cost: # from [@schroeder:2013]
    techs:
      hydro_run_of_river:
        lifetime: 60
        cost_flow_cap:
          data: {{ 3000000 * scaling_factors.specific_costs}} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2010/MW") }} Table 33
          index: monetary
          dims: costs
        cost_om_annual:
          data: {{ (60000 - 1 * 8760 * capacity_factors.ror) * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2010/MW") }} Table 34
          index: monetary
          dims: costs
        cost_flow_out:
          data: {{ 1 * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2010/MW") }} stolen from om_annual for technical reasons
          index: monetary
          dims: costs
      hydro_reservoir:
        lifetime: 60
        cost_flow_cap:
          data: {{ 2000000 * scaling_factors.specific_costs}} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2010/MW") }} Table 33
          index: monetary
          dims: costs
        cost_om_annual:
          data: {{ (20000 - 1 * 8760 * capacity_factors.ror) * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2010/MW") }} Table 34
          index: monetary
          dims: costs
        cost_flow_out:
          data: {{ 1 * scaling_factors.specific_costs }} # {{ (1 / scaling_factors.specific_costs) | unit("EUR2010/MW") }} stolen from om_annual for technical reasons
          index: monetary
          dims: costs

  freeze_hydro_supply_capacities:
    nodes:
      {% for id, location in locations.iterrows() %}
      {{ id }}.techs: # {{ location["name"] }}
        hydro_run_of_river:
          flow_cap_min: {{ location.installed_capacity_hror_MW * scaling_factors.power }} # {{ (1 / scaling_factors.power) | unit("MW") }}
        hydro_reservoir:
          flow_cap_min: {{ location.installed_capacity_hdam_MW * scaling_factors.power }} # {{ (1 / scaling_factors.power) | unit("MW") }}
          storage_cap_min: {{ location.storage_capacity_hdam_MWh * scaling_factors.power }} # {{ (1 / scaling_factors.power) | unit("MWh") }}
      {% endfor %}

nodes:
  {% for id, location in locations.iterrows() %}
  {{ id }}.techs:
    hydro_run_of_river:
      flow_cap_max: {{ location.installed_capacity_hror_MW * scaling_factors.power }} # {{ (1 / scaling_factors.power) | unit("MW") }}
    hydro_reservoir:
      flow_cap_max: {{ location.installed_capacity_hdam_MW * scaling_factors.power }} # {{ (1 / scaling_factors.power) | unit("MW") }}
      storage_cap_max: {{ location.storage_capacity_hdam_MWh * scaling_factors.power }} # {{ (1 / scaling_factors.power) | unit("MWh") }}
  {% endfor %}
